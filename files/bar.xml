<feed xmlns="http://www.w3.org/2005/Atom"><author><name>Paul R. Brown</name><uri>http://localhost:7007</uri><email>paulrbrown@gmail.com</email></author><generator uri="http://datapr0n.com/perpubplat" version="0.9">perpubplat</generator><id>urn:perpubplat:mult.ifario.us:comments:atom:all</id><link rel="self" href="http://localhost:7007/feeds/comments/atom.xml"/><title type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">mult.ifario.us - Comments on Recent Posts</div></title><updated>2007-11-22T02:06:02Z</updated><entry><author><name>Rudolf Olah</name><uri>http://blog.neverfriday.com</uri></author><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">The problem isn't that crappy software appears. We all realize that with popularity comes a bunch of idiots. The problem is that others do not realize how crappy the software is, or they do but do little to change the situation. That's the real problem: a failure to adapt.

The best way to combat this is  to teach "weird" and "hard" languages such as Haskell and Lisp to those C/C++/Java people.

Also, you're over the Steve-limit. Two Steves! No more no less :P</div></content><id>http://localhost:7007/tyranny-of-the-average/comment-492</id><link rel="alternate" href="http://localhost:7007/tyranny-of-the-average/comment-492"/><published>2007-11-14T12:58:02Z</published><title type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"></div></title><updated>2007-11-16T14:09:03Z</updated></entry><entry><author><name>she/hh@hot.com</name></author><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">I dont really agree with that.

It depends on the one that writes software and his experience.

And of course also whether the language encourages good behaviour or not.

In a way this is why the python way per se is a good way (although python made horrible decisions with their OOP model, including the arbitrary (self). It never feels like pure OOP. Only Perl has made it worse.)</div></content><id>http://localhost:7007/tyranny-of-the-average/comment-493</id><link rel="alternate" href="http://localhost:7007/tyranny-of-the-average/comment-493"/><published>2007-11-14T13:36:09Z</published><title type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"></div></title><updated>2007-11-22T02:06:02Z</updated></entry><entry><author><name>Paul Brown</name><uri>http://mult.ifario.us/</uri></author><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>There is a <a href="http://programming.reddit.com/info/60kmg/comments/">comment thread</a> going over at Reddit.</p></div></content><id>http://localhost:7007/tyranny-of-the-average/comment-494</id><link rel="alternate" href="http://localhost:7007/tyranny-of-the-average/comment-494"/><published>2007-11-14T16:42:31Z</published><title type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"></div></title><updated>2007-11-15T14:16:14Z</updated></entry><entry><author><name>Mike B</name></author><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">I really dislike this line of thinking.

Firstly, good programmers can produce terrible code, and a average programmer can produce good code, given the right circumstances. There is a lot more to quality than just the skill of the developer.

Secondly, it is really hard for a small number of great programmers to clean up a massive codebase. They might as well start from scratch. As you can imagine, the circumstances I've mentioned above come into play here as well. Great programmers have deadlines and responsibilities just like average programmers.

On small projects having a a hand full of good developers will do.

On large projects you need good developers AND a disciplined development methodology. This is the only way a large project can keep from acquiring a huge amount of developer 'debt'.</div></content><id>http://localhost:7007/tyranny-of-the-average/comment-495</id><link rel="alternate" href="http://localhost:7007/tyranny-of-the-average/comment-495"/><published>2007-11-14T22:49:37Z</published><title type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"></div></title><updated>2007-11-15T14:17:31Z</updated></entry><entry><author><name>Hendrik Lipka</name><uri>http://blog.hendriklipka.de</uri></author><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">I think this happens everywhere - most people suck at what they do (or at least they are not good at it). Go to your hair dresser, look at your managers, watch what the architect building your house does - finding someone skilled at his work is rare. Yes, even the good people sometime make mistakes, but they recognize this and learn from that.</div></content><id>http://localhost:7007/tyranny-of-the-average/comment-496</id><link rel="alternate" href="http://localhost:7007/tyranny-of-the-average/comment-496"/><published>2007-11-15T08:46:16Z</published><title type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"></div></title><updated>2007-11-15T18:37:12Z</updated></entry><entry><author><name>yang</name></author><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">What about performance?

There's a third option, MVars, which should be much simpler than the first option, and similar to but more performant than TVars.</div></content><id>http://localhost:7007/tuppence-tour-of-haskell-concurrency-constructs/comment-490</id><link rel="alternate" href="http://localhost:7007/tuppence-tour-of-haskell-concurrency-constructs/comment-490"/><published>2007-11-06T13:45:09Z</published><title type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"></div></title><updated>2007-11-06T18:17:02Z</updated></entry><entry><author><name>Paul Brown</name><uri>http://mult.ifario.us/</uri></author><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><em>@yang:</em> MVars could figure in both, in place of the response channel in the first (one MVar per request to be used as a handback), and in place of the TVar.  It would be interesting to benchmark the comparison between MVar and TVar.  I didn't try benchmarking any of the options.</p></div></content><id>http://localhost:7007/tuppence-tour-of-haskell-concurrency-constructs/comment-491</id><link rel="alternate" href="http://localhost:7007/tuppence-tour-of-haskell-concurrency-constructs/comment-491"/><published>2007-11-06T18:24:45Z</published><title type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"></div></title><updated>2007-11-06T18:25:32Z</updated></entry><entry><author><name>Keith Fahlgren</name></author><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Just for the sake of posterity, since you clearly already know this, the !! can be replaced with an line reference, like line 500 of your history:

 $ !500:gs/foo/bar/
</div></content><id>http://localhost:7007/bash-tidbit-of-the-day/comment-489</id><link rel="alternate" href="http://localhost:7007/bash-tidbit-of-the-day/comment-489"/><published>2007-10-23T19:31:11Z</published><title type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"></div></title><updated>2007-11-04T02:06:18Z</updated></entry><entry><author><name>manu</name></author><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Hello,

I'm on a mac and this works fine with the Carbonized version of emacs, but no so well with regular emacs in terminal where non ASCII character are turned into ?

Any idea ?

Thanks</div></content><id>http://localhost:7007/emacs-haskell-mode-unicode-cuteness/comment-487</id><link rel="alternate" href="http://localhost:7007/emacs-haskell-mode-unicode-cuteness/comment-487"/><published>2007-10-03T04:34:27Z</published><title type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"></div></title><updated>2007-10-03T11:31:23Z</updated></entry><entry><author><name>Paul Brown</name><uri>http://mult.ifario.us</uri></author><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><em>@manu:</em>  I've been using the Aquamacs port myself with good results.  Is the emacs from the commandline the same as the Carbon-ized emacs?  It's possible that you either don't have the same haskell support libraries installed or that you don't have the configuration file for that version.  Other than that, I'm not sure what to suggest.</p></div></content><id>http://localhost:7007/emacs-haskell-mode-unicode-cuteness/comment-488</id><link rel="alternate" href="http://localhost:7007/emacs-haskell-mode-unicode-cuteness/comment-488"/><published>2007-10-03T11:46:31Z</published><title type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"></div></title><updated>2007-10-03T17:42:48Z</updated></entry><entry><author><name>Wes Maldonado</name><uri>http://www.brokenbuild.com/blog/</uri></author><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">I also lost my enthusiasm for the iPhone.  Thanks for pointing out the syncing apps, I'm going to try those out.</div></content><id>http://localhost:7007/no-iphone-for-me/comment-483</id><link rel="alternate" href="http://localhost:7007/no-iphone-for-me/comment-483"/><published>2007-06-13T16:27:10Z</published><title type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"></div></title><updated>2007-06-13T17:06:47Z</updated></entry><entry><author><name>mike</name></author><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">the "no Flash Player" killed the iPhone for me.  I don't want a "kinda sorta" Internet..</div></content><id>http://localhost:7007/no-iphone-for-me/comment-484</id><link rel="alternate" href="http://localhost:7007/no-iphone-for-me/comment-484"/><published>2007-06-26T10:30:05Z</published><title type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"></div></title><updated>2007-06-28T01:15:44Z</updated></entry><entry><author><name>Didier Prophete</name><uri>http://blog.slideaware.com</uri></author><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><em>Paul:</em>  I think most people have the preconceived notion that functional languages are mostly restricted to academic projects (erlang/lisp for a startup... you've got to be kidding me ?) I think this is what motivated this comment about Erlang. Unfortunately, in order to see the power of such languages, you have to go through the 'functional mindshift' which usually happens after you have spent a little bit of time experimenting with them.</p>

<p>After years of c/c++/java domination, It is just hard to convince people that you can do something useful in a language where the value of variables doesn't change (like Erlang) (for the skeptics out there, immutability allows you to only pass objects by reference since you know the receiving function/process will never change its value. This means you never have to do a deep copy, which is fairly expensive for complex objects).</p>

<p>People would rather bend over backward than realize that maybe the foundations (== the language they are using) is not really suited to the problem they are solving...</p>

<p>I think there is a long road ahead of us (us == functional language evangelist) before there is mainstream adoption. But that's ok: as I mentioned in the SlideAware article, I think this is a source of competitive advantage :-)</p></div></content><id>http://localhost:7007/de-gustibus-non-disputandum-est/comment-482</id><link rel="alternate" href="http://localhost:7007/de-gustibus-non-disputandum-est/comment-482"/><published>2007-05-19T00:37:24Z</published><title type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"></div></title><updated>2007-05-19T13:02:38Z</updated></entry><entry><author><name>Ian</name><uri>http://ianp.org/</uri></author><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">I'm trying to choose between a MacBook and a Pro at the moment myself (currently running a G4 powerbook, but the lack of an F6 key and a half broken number 6 are reducing it's usefulness. Plus, I'd really like to be able to run VMWare).

What made you go with the MacBook vs. a Pro?</div></content><id>http://localhost:7007/blackbook-impressions/comment-480</id><link rel="alternate" href="http://localhost:7007/blackbook-impressions/comment-480"/><published>2007-05-17T07:58:06Z</published><title type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"></div></title><updated>2007-05-17T13:59:45Z</updated></entry><entry><author><name>Paul Brown</name><uri>http://mult.ifario.us/</uri></author><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><em>@Ian:</em> It has been my experience that more expensive laptops generally serve my needs better (useful lifetime per dollar is highest at around the $3,000 price point), but that was also when I was using my laptop as a primary development machine and spending a lot of time on the road.  In this case, with a desktop (4-way G5, probably going to go with an 8-way Duo soonish) as my primary development machine, I couldn't make the argument to myself that the Pro was going to be a better value than the plain MacBook for my use cases of occasional travel, noodling in a cafe, or working in an armchair instead of my office at home.</p></div></content><id>http://localhost:7007/blackbook-impressions/comment-481</id><link rel="alternate" href="http://localhost:7007/blackbook-impressions/comment-481"/><published>2007-05-17T14:06:46Z</published><title type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"></div></title><updated>2007-05-17T15:05:06Z</updated></entry><entry><author><name>Betty</name><uri>http://www.myrelaxway.com</uri></author><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Looks pretty strange... I don't know why but reminds me my studies... </div></content><id>http://localhost:7007/money-maths-and-chairs/comment-479</id><link rel="alternate" href="http://localhost:7007/money-maths-and-chairs/comment-479"/><published>2007-05-14T16:46:59Z</published><title type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"></div></title><updated>2007-05-16T19:03:43Z</updated></entry><entry><author><name>Garrett Conaty</name></author><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">it's called a press release :)

Seriously, person-person interaction for an interview gives so much more context than responses to a questionaire...would you hire someone based on an email interview?</div></content><id>http://localhost:7007/email-only-press-policy/comment-476</id><link rel="alternate" href="http://localhost:7007/email-only-press-policy/comment-476"/><published>2007-04-25T12:14:21Z</published><title type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"></div></title><updated>2007-04-25T13:59:02Z</updated></entry><entry><author><name>Paul Brown</name><uri>http://mult.ifario.us</uri></author><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>An interesting thought, but I say that it's apples and oranges.</p>

<p>On the one hand, you have a journalist, who may or may not be an expert in the field, left to their own devices to capture quotes and create content based on their notes and recollections.  The journalist's goal is to collect, collate, and present information.  My experience is that an ad hoc interview process degrades the quality of the information if either written responses or without an editorial review by the interviewee(s) is left out.  Also, the content of the interview is for consumption by third parties in a non-interactive mode.</p>

<p>A job interview, on the other hand, is intended to test the knowledge, thinking ability, and communication skills of the interviewee.  The content is primarily for the interviewer but also for third parties, each of which has probably had direct contact with the interviewee.  Moreover, the consumption of that information is in the interactive forum of an interview debrief where clarifications and revisions can be made by the different observers.</p>

</div></content><id>http://localhost:7007/email-only-press-policy/comment-477</id><link rel="alternate" href="http://localhost:7007/email-only-press-policy/comment-477"/><published>2007-04-25T18:06:14Z</published><title type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"></div></title><updated>2007-04-26T01:13:23Z</updated></entry><entry><author><name>Whatever</name></author><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Transactions aren't a substitute for thinking, but reimplementing a half-baked pseudo transactional system with extra problems and fewer genuine advantages is stupid.</p>

<p>People who can't use transactions probably don't understand the relevant issues enough to figure out a transactionless system, and people who understand both transactions and their own particular requirements can build a system customised to their own precise requirements.</p>

<p>If your locking and indexing requirements are sufficiently specialised then there may well be an advantage to specialising your database tools.</p>

<p>On the positive side, the spread of the "transactions are icky and slow" theory is going to create a whole lot of crap, and some extra business for the people who actually know what they're doing, so it's not all bad news.</p></div></content><id>http://localhost:7007/not-quite-no-transactions/comment-470</id><link rel="alternate" href="http://localhost:7007/not-quite-no-transactions/comment-470"/><published>2007-03-20T14:45:36Z</published><title type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"></div></title><updated>2007-03-20T15:08:32Z</updated></entry><entry><author><name>Benjamin Mitchell</name></author><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">The link to the Pat Helland paper is broken.  It should be:
http://www-db.cs.wisc.edu/cidr/cidr2007/papers/cidr07p15.pdf
</div></content><id>http://localhost:7007/not-quite-no-transactions/comment-471</id><link rel="alternate" href="http://localhost:7007/not-quite-no-transactions/comment-471"/><published>2007-03-27T06:16:34Z</published><title type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"></div></title><updated>2007-03-27T14:14:30Z</updated></entry><entry><author><name>Paul Brown</name><uri>http://mult.ifario.us</uri></author><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><em>@Benjamin:</em>  Fixed.  Thanks!</div></content><id>http://localhost:7007/not-quite-no-transactions/comment-472</id><link rel="alternate" href="http://localhost:7007/not-quite-no-transactions/comment-472"/><published>2007-03-27T14:22:26Z</published><title type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"></div></title><updated>2007-03-27T14:23:09Z</updated></entry><entry><author><name></name><uri>http://www.brokenbuild.com/blog/2007/03/19/java-threadsafety-again-this-time-regexes/</uri></author><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"></div></content><id>http://localhost:7007/java-brainteaser-on-regular-expressions/comment-504</id><link rel="alternate" href="http://localhost:7007/java-brainteaser-on-regular-expressions/comment-504"/><published>2007-03-20T02:32:13Z</published><summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Over at mult.ifario.us there was a Java brain teaser&#8230;


  Suppose that you have a Java web application where regular expressions are used deep down in the implementation to do some work, but you observe that the an array index exception is o...</div></summary><title type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Java Threadsafety again&#8230; this time Regexes?</div></title><updated>2007-03-20T02:57:35Z</updated></entry><entry><author><name>assaf</name><uri>http://labnotes.org</uri></author><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">http://buildr.rubyforge.org/
http://svn.apache.org/repos/asf/incubator/ode/trunk/Rakefile</div></content><id>http://localhost:7007/ok-who-put-the-junit-jar-in-my-war/comment-457</id><link rel="alternate" href="http://localhost:7007/ok-who-put-the-junit-jar-in-my-war/comment-457"/><published>2007-03-07T04:26:41Z</published><title type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"></div></title><updated>2007-03-07T04:48:03Z</updated></entry><entry><author><name>Paul Brown</name><uri>http://mult.ifario.us</uri></author><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><em>@assaf:</em> I saw that check-in float by a couple of days ago.  I'm going to give the raven build for ODE a go tomorrow.  Seeing the <tt>OpenJPA.enhance(...)</tt> bit brought a small tear of joy to my eye...  It looks much more like the right way to do it.</div></content><id>http://localhost:7007/ok-who-put-the-junit-jar-in-my-war/comment-458</id><link rel="alternate" href="http://localhost:7007/ok-who-put-the-junit-jar-in-my-war/comment-458"/><published>2007-03-07T04:57:44Z</published><title type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"></div></title><updated>2007-03-07T04:59:56Z</updated></entry><entry><author><name>Davanum Srinivas</name></author><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">See http://svn.apache.org/viewvc?view=rev&amp;revision=515558 Please let us know if you spot something else. 

thanks,
dims</div></content><id>http://localhost:7007/ok-who-put-the-junit-jar-in-my-war/comment-459</id><link rel="alternate" href="http://localhost:7007/ok-who-put-the-junit-jar-in-my-war/comment-459"/><published>2007-03-07T08:27:27Z</published><title type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"></div></title><updated>2007-03-07T10:47:53Z</updated></entry></feed>